{"version":3,"sources":["webpack:///./src/actions/effectActions.tsx","webpack:///./src/types/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/componets/sidebar.tsx","webpack:///./src/actions/galleryActions.tsx","webpack:///./src/componets/fullscreenImage.tsx","webpack:///./src/componets/spiral.tsx","webpack:///./src/componets/gallery.tsx","webpack:///./src/componets/header.tsx","webpack:///./src/componets/portrait.tsx","webpack:///./src/componets/footer.tsx","webpack:///./src/componets/textbackground.tsx","webpack:///./src/componets/description.tsx","webpack:///./src/componets/frontpage.tsx","webpack:///./src/reducers/galleryReducer.tsx","webpack:///./src/reducers/effectReducer.tsx","webpack:///./src/reducers/index.tsx","webpack:///./src/store/index.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/layouts/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["background","type","debackground","React","createContext","PropTypes","object","string","isRequired","func","menuItem","link","name","selected","react","className","styles","item","gatsby_link_default","a","to","Component","props","_this","_React$Component","call","this","render","menu","deselectImage","selectImage","newId","id","handleClick","dispatch","galleryActions","renderMarkdown","data","content","edges","map","md","node","frontmatter","image","includes","title","dangerouslySetInnerHTML","__html","html","filter","renderFullScreen","gallery","fullScreen","key","fullScreenGrid","onClick","fullScreenImage","gatsby_image_default","fluid","childImageSharp","fullScreenText","getId","state","length","updateWindowDimensions","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","connect","renderImages","sort","Math","random","imageList","imageNode","push","e","spiralContainer","spiralGrid","fullscreenImage","spiralOffset","selectedImageKey","b","collageButton","collageContainer","renderImage","relativePath","imageTitle","_this$props$data","collageGrid","topContainer","top","getFluidImage","websiteImages","imagePath","portraitContainer","gatsby_background_image_default","Tag","portraitBackground","cjs","x","y","portraitBackWall","portraitElementContainer","renderTextbackground","listOfText","isback","effect","list","i","frontText","style","transform","floor","backText","textbackground","textbackgroundGrid","textContainer","about","app","assertThisInitialized_default","hidingTimer","timerId","setTimeout","effectActions","handleMouseMove","store","clearTimeout","page","wrapper","onMouseMove","header","spiral","sidebar","sidebar_Component","portrait","portrait_Component","description","description_Component","componets_gallery","footer","footer_Component","initialState","combineReducers","action","concat","middleware","thunk","createStore","rootReducer","applyMiddleware","apply","IndexPage","es","Helmet","rel","href","layouts","frontpage","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","MainLayout","_ref","children","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"0LAEaA,EAAa,iBAAO,CAC/BC,KCAwB,eDEbC,EAAe,iBAAO,CACjCD,KCF0B,2ECSDE,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,KCjDtB,IAAMC,EAAW,SAACC,EAAcC,EAAcC,GAC5C,OACEC,EAAA,qBAAKC,UAAWC,IAAOC,MACrBH,EAAA,cAACI,EAAAC,EAAD,CACEC,GAAIT,EACJI,UAAWJ,IAASE,EAAW,IAAMG,IAAOH,SAAW,IAEtDD,KAMYS,cACnB,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OACtBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAGFb,SAAW,IAJaU,8BAMjBI,OAAP,WACE,OACEb,EAAA,qBAAKC,UAAWC,IAAOY,MACpBlB,EAAS,IAAK,QAASgB,KAAKb,UAC5BH,EAAS,WAAY,SAAUgB,KAAKb,UACpCH,EAAS,cAAe,YAAagB,KAAKb,UAC1CH,EAAS,YAAa,UAAWgB,KAAKb,eAbRV,wCCnB1B0B,EAAgB,iBAAO,CAClC5B,KHJ0B,iBGOf6B,EAAc,SAACC,GAAD,MAAoB,CAC7C9B,KHP4B,eGQ5B+B,GAAID,ICOAV,kCACJ,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OACtBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAGFO,YAAc,WACZV,EAAKD,MAAMY,SAASC,MALEZ,EAQxBa,eAAiB,SAACxB,GAGhB,OAFWW,EAAKD,MAAMe,KAAKC,QAAQC,MAGhCC,IAAI,SAACC,GACJ,GACEA,EAAGC,KAAKC,YAAYC,OACpBH,EAAGC,KAAKC,YAAYC,MAAMC,SAASjC,GAEnC,OACEE,EAAA,yBACEA,EAAA,uBACEA,EAAA,uBAAI2B,EAAGC,KAAKC,YAAYG,QAE1BhC,EAAA,mBACEiC,wBAAyB,CACvBC,OAAQP,EAAGC,KAAKO,WAO3BC,OAAO,SAAS/B,GACf,OAAOA,IACN,IAjCiBI,EAoCxB4B,iBAAmB,SAACnB,GAClB,OACElB,EAAA,yBAEWS,EAAKD,MAAMe,KAAKe,QAAQb,MAC5BC,IAAI,SAACI,GACJ,GAAIA,EAAMF,KAAKV,KAAOA,EACpB,OACElB,EAAA,qBAAKC,UAAWC,IAAOqC,YACrBvC,EAAA,qBACEwC,IAAKV,EAAMF,KAAKV,GAChBjB,UAAWC,IAAOuC,eAClBC,QAASjC,EAAKU,aAEdnB,EAAA,qBAAKC,UAAWC,IAAOyC,iBACrB3C,EAAA,cAAC4C,EAAAvC,EAAD,CACEwC,MAAOf,EAAMF,KAAKkB,gBAAgBD,MAClCL,IAAKV,EAAMF,KAAKV,MAGpBlB,EAAA,qBAAKC,UAAWC,IAAO6C,gBACpBtC,EAAKa,eAAeQ,EAAMF,KAAK9B,WAO3CsC,OAAO,SAAS/B,GACf,OAAOA,IACN,KAlEWI,EAwExBuC,MAAQ,WACN,OAAIvC,EAAKD,MAAMyC,MAAMX,SAAW7B,EAAKD,MAAMyC,MAAMX,QAAQY,OAAS,EACzDzC,EAAKD,MAAMyC,MAAMX,QAAQ7B,EAAKD,MAAMyC,MAAMX,QAAQY,OAAS,GAAGhC,GAE9D,IA5EaT,EAyFxB0C,uBAAyB,aAzFD1C,sCAgFxB2C,kBAAA,WACExC,KAAKuC,yBACLE,OAAOC,iBAAiB,SAAU1C,KAAKuC,2BAGzCI,qBAAA,WACEF,OAAOG,oBAAoB,SAAU5C,KAAKuC,2BAKrCtC,OAAP,WACE,OAAOb,EAAA,yBAAMY,KAAKyB,iBAAiBzB,KAAKoC,cA7FpB3D,cAqGToE,kBAJf,SAAyBR,GACvB,MAAO,CAAEA,UAGIQ,CAAyBlD,GClGlCmD,EAAe,SAAClD,EAAY8B,GAChC,IAAIf,EAAOe,EAAQb,MAEnBF,EAAOA,EAAKoC,KAAK,WACf,OAAIC,KAAKC,UAAYD,KAAKC,SAAiB,EACvCD,KAAKC,SAAWD,KAAKC,UAAkB,EACvCD,KAAKC,SAAWD,KAAKC,SAAiB,OAA1C,IAGF,IAAIC,EAAiB,GAmBrB,OAjBAvC,EAAKG,IAAI,SAACqC,GACJD,EAAUZ,OAAS,IACrBY,EAAUE,KACRhE,EAAA,qBACEwC,IAAKsB,EAAUZ,OACfR,QAAS,SAAAuB,GAAC,OApBA,SAACzD,EAAYgC,GAC/BhC,EAAMY,SAASC,EAA2BmB,IAmBpBrB,CAAYX,EAAOuD,EAAUnC,KAAKV,MAEhDlB,EAAA,cAAC4C,EAAAvC,EAAD,CACEJ,UAAWC,IAAOgE,gBAClBrB,MAAOkB,EAAUnC,KAAKkB,gBAAgBD,MACtCL,IAAK,IAAMuB,EAAUnC,KAAKV,SAO7B4C,GAGHvD,cACJ,SAAAA,EAAYC,GAAY,OACtBE,EAAAC,KAAAC,KAAMJ,IADgBI,iCAIjBC,OAAP,WAAgB,IACNyB,EAAY1B,KAAKJ,MAAMe,KAAvBe,QAER,OACEtC,EAAA,qBAAKC,UAAWC,IAAOiE,YACrBnE,EAAA,cAACoE,EAAD,CAAiB7C,KAAMX,KAAKJ,MAAMe,OAElCvB,EAAA,qBAAKC,UAAWC,IAAOmE,cACpBX,EAAa9C,KAAKJ,MAAO8B,SAbZjD,aAwBToE,cAJS,SAACR,GACvB,OAAOA,GAGMQ,CAAyBlD,GCvDlCA,cACJ,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OACtBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAGF0D,iBAAmB,GAJK7D,EAMxBU,YAAc,SAACD,GACbT,EAAKD,MAAMY,SAASC,EAA2BH,KAPzBT,EAUxBiD,aAAe,WACb,IAAInC,EAAOd,EAAKD,MAAMe,KAAKe,QAAQb,MAcnC,OAZAF,EAAOA,EAAKoC,KAAK,SAAStD,EAAQkE,GAChC,OAAIlE,EAAEuB,KAAK9B,MAAQyE,EAAE3C,KAAK9B,KACjB,EAELO,EAAEuB,KAAK9B,KAAOyE,EAAE3C,KAAK9B,MACf,EAENO,EAAEuB,KAAK9B,KAAOyE,EAAE3C,KAAK9B,KAChB,OADT,KAKU4B,IAAI,SAACI,GAGf,OAFArB,EAAK6D,iBAAmBxC,EAAMF,KAAKV,GAGjClB,EAAA,qBACEwC,IAAK,IAAMV,EAAMF,KAAKV,GACtBwB,QAAS,SAAAuB,GAAC,OAAIxD,EAAKU,YAAYW,EAAMF,KAAKV,KAC1CjB,UAAWC,IAAOsE,eAElBxE,EAAA,cAAC4C,EAAAvC,EAAD,CACEwC,MAAOf,EAAMF,KAAKkB,gBAAgBD,MAClC5C,UAAWC,IAAOuE,iBAClBjC,IAAK,IAAMV,EAAMF,KAAKV,SArCRT,EA4CxBiE,YAAc,SAAC7C,GACb,OAAOpB,EAAKD,MAAMe,KAAKe,QAAQb,MAC5BC,IAAI,SAACI,GACJ,GAAIA,EAAMF,KAAK+C,aAAa5C,SAASF,EAAYC,OAE/C,OADArB,EAAK6D,iBAAmBxC,EAAMF,KAAKV,GAEjClB,EAAA,qBACEwC,IAAK,IAAMV,EAAMF,KAAKV,GACtBjB,UAAWC,IAAOsE,cAClB9B,QAAS,SAAAuB,GAAC,OAAIxD,EAAKU,YAAYW,EAAMF,KAAKV,MAE1ClB,EAAA,cAAC4C,EAAAvC,EAAD,CACEJ,UAAWC,IAAOuE,iBAClB5B,MAAOf,EAAMF,KAAKkB,gBAAgBD,MAClCL,IAAK,IAAMV,EAAMF,KAAKV,KAExBlB,EAAA,qBAAKC,UAAWC,IAAO0E,WAAYpC,IAAK,IAAMV,EAAMF,KAAKV,IACtDW,EAAYG,UAMtBI,OAAO,SAAS/B,GACf,OAAOA,IACN,IArEiBI,EAwExBa,eAAiB,WACf,IAAIC,EAAOd,EAAKD,MAAMe,KAAKC,QAAQC,MAcnC,OAZAF,EAAOA,EAAKoC,KAAK,SAAStD,EAAQkE,GAChC,OAAIlE,EAAEuB,KAAK9B,MAAQyE,EAAE3C,KAAK9B,KACjB,EAELO,EAAEuB,KAAK9B,KAAOyE,EAAE3C,KAAK9B,MACf,EAENO,EAAEuB,KAAK9B,KAAOyE,EAAE3C,KAAK9B,KAChB,OADT,KAKU4B,IAAI,SAACC,GACf,OAAOlB,EAAKiE,YAAY/C,EAAGC,KAAKC,gBAxFZpB,8BA4FjBI,OAAP,WAAgB,IAAAgE,EACejE,KAAKJ,MAAMe,KAD1BsD,EACNvC,QADMuC,EACGrD,QAEjB,OACExB,EAAA,yBACEA,EAAA,cAACoE,EAAD,CAAiB7C,KAAMX,KAAKJ,MAAMe,OAElCvB,EAAA,qBAAKC,UAAWC,IAAO4E,aAAclE,KAAKU,uBApG1BjC,aA8GToE,kBAJf,SAAyBR,GACvB,OAAOA,GAGMQ,CAAyBlD,GCvHlCA,cACJ,SAAAA,EAAYC,GAAY,OACtBE,EAAAC,KAAAC,KAAMJ,IADgBI,iCAIjBC,OAAP,WACE,OACEb,EAAA,qBAAKC,UAAWC,IAAO6E,cACrB/E,EAAA,qBAAKC,UAAWC,IAAO8E,KACrBhF,EAAA,qBAAKC,UAAWC,IAAO8B,OAAvB,iBATc3C,aAoBToE,kBAJf,SAAyBR,GACvB,MAAO,CAAEA,UAGIQ,CAAyBlD,qBClBnBA,cACnB,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OACtBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAGFqE,cAAgB,SAACC,EAAoBC,GACnC,OAAOD,EAAczD,MAClBC,IAAI,SAACqC,GACJ,GAAIA,EAAUnC,KAAK+C,eAAiBQ,EAClC,OAAOpB,EAAUnC,KAAKkB,gBAAgBD,QAGzCT,OAAO,SAAS6B,GACf,OAAOA,IACN,IAbiBxD,8BAgBjBI,OAAP,WAAgB,IACNqE,EAAkBtE,KAAKJ,MAAMe,KAA7B2D,cAER,OACElF,EAAA,qBAAKC,UAAWC,IAAOkF,mBACrBpF,EAAA,cAACqF,EAAAhF,EAAD,CACEiF,IAAI,UACJzC,MAAOjC,KAAKqE,cAAcC,EAAe,mBACzCjF,UAAWC,IAAOqF,oBAElBvF,EAAA,cAACwF,EAAA,SAAD,CAAUC,EAAG,CAAC,GAAI,IAAKC,EAAG,CAAC,GAAI,KAC7B1F,EAAA,cAAC4C,EAAAvC,EAAD,CACEiF,IAAI,UACJzC,MAAOjC,KAAKqE,cAAcC,EAAe,mBACzCjF,UAAWC,IAAOyF,oBAItB3F,EAAA,cAACwF,EAAA,SAAD,CAAUC,EAAG,CAAC,EAAG,IAAKC,EAAG,EAAE,IAAK,KAC9B1F,EAAA,cAAC4C,EAAAvC,EAAD,CACEJ,UAAWC,IAAO0F,yBAClB/C,MAAOjC,KAAKqE,cAAcC,EAAe,sBAtChB7F,aCNlBkB,cACnB,SAAAA,EAAYC,GAAY,OACtBE,EAAAC,KAAAC,KAAMJ,IADgBI,iCAGjBC,OAAP,WACE,OACEb,EAAA,yBACEA,EAAA,gDAP+BX,aCEjCkB,sJACJsF,qBAAuB,WACrB,IAAIC,EAAa,GAEbC,GAAS,EACkB,MAA3BtF,EAAKD,MAAMyC,MAAM+C,SACnBD,EAAStF,EAAKD,MAAMyC,MAAM+C,OAAOvF,EAAKD,MAAMyC,MAAM+C,OAAO9C,OAAS,GAC/DhE,YAEL,IAAI+G,EAAO,CACT,WACA,MACA,cACA,SACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,OAGF,GAAIF,EACF,IAAK,IAAIG,EAAI,EAAGA,EAAI,IAAKA,IACnBA,EAAI,GAAM,EACZJ,EAAW9B,KACThE,EAAA,qBAAKwC,IAAKsD,EAAW5C,OAAQjD,UAAWC,IAAOiG,WAE3C1F,EAAKD,MAAMyC,MAAM+C,OAAOvF,EAAKD,MAAMyC,MAAM+C,OAAO9C,OAAS,GACtDhE,WAGLc,EAAA,mBACEwC,IAAK,IAAMsD,EAAW5C,OACtBkD,MAAO,CACLC,UAAS,cAA+B,IAAhBzC,KAAKC,SAC3B,KADO,QACmB,IAAhBD,KAAKC,SACf,KAFO,cAEyB,EAAhBD,KAAKC,SACrB,GAHO,YAIP,IADaD,KAAKC,SAHX,mBAI8B,IAAhBD,KAAKC,SAC1B,KALO,QAKmB,IAAhBD,KAAKC,SACf,KANO,aAOP,GADgBD,KAAKC,SANd,YAOwB,IAAhBD,KAAKC,SAPb,SAUVoC,EAAKrC,KAAK0C,MAAM1C,KAAKC,UAAY,EAAIoC,EAAK/C,OAAS,QAK1D4C,EAAW9B,KACThE,EAAA,qBAAKwC,IAAKsD,EAAW5C,OAAQjD,UAAWC,IAAOqG,UAE3C9F,EAAKD,MAAMyC,MAAM+C,OAAOvF,EAAKD,MAAMyC,MAAM+C,OAAO9C,OAAS,GACtDhE,WAGLc,EAAA,mBACEwC,IAAK,IAAMsD,EAAW5C,OACtBkD,MAAO,CACLC,UAAS,cAA+B,IAAhBzC,KAAKC,SAC3B,KADO,QACmB,IAAhBD,KAAKC,SACf,KAFO,cAEyB,IAAhBD,KAAKC,SACrB,GAHO,YAIP,IADaD,KAAKC,SAHX,mBAI8B,IAAhBD,KAAKC,SAC1B,KALO,QAKmB,IAAhBD,KAAKC,SACf,KANO,cAMyB,GAAhBD,KAAKC,SACrB,IAPO,YAOwB,IAAhBD,KAAKC,SAPb,SAUVoC,EAAKrC,KAAK0C,MAAM1C,KAAKC,UAAY,EAAIoC,EAAK/C,OAAS,QAOhE,OAAO4C,iCAGFjF,OAAP,WACE,OACEb,EAAA,qBAAKC,UAAWC,IAAOsG,gBACrBxG,EAAA,qBAAKC,UAAWC,IAAOuG,oBACpB7F,KAAKiF,6BAxFQxG,aAmGToE,kBAJf,SAAyBR,GACvB,MAAO,CAAEA,UAGIQ,CAAyBlD,GCpGnBA,cACnB,SAAAA,EAAYC,GAAY,OACtBE,EAAAC,KAAAC,KAAMJ,IADgBI,iCAGjBC,OAAP,WACE,OACEb,EAAA,qBAAKC,UAAWC,IAAOwG,eACrB1G,EAAA,mBACEiC,wBAAyB,CACvBC,OAAQtB,KAAKJ,MAAMe,KAAKoF,MAAMxE,aATH9C,aCYjCkB,cACJ,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OACtBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAOFgG,IARwBC,IAAApG,KAWxBqG,YAAc,WACZrG,EAAKsG,QAAUC,WAAW,WACxBvG,EAAKD,MAAMY,SAAS6F,MACnB,MAdmBxG,EAiBxB2C,kBAAoB,WAClB3C,EAAKqG,eAlBiBrG,EAqBxByG,gBAAkB,SAACC,GACjBC,aAAa3G,EAAKsG,SAGE,MAAhBI,EAAMnB,QACCvF,EAAKD,MAAMyC,MAAM+C,OAAOvF,EAAKD,MAAMyC,MAAM+C,OAAO9C,OAAS,GAC/DhE,WAIHuB,EAAKD,MAAMyC,MAAM+C,OAAOvF,EAAKD,MAAMyC,MAAM+C,OAAO9C,OAAS,GAAGhE,YAE5DuB,EAAKD,MAAMY,SAAS6F,KAGtBxG,EAAKqG,eAjCLrG,EAAKsG,QAAU,KAEftG,EAAKqG,cALiBrG,8BAuCjBI,OAAP,WACE,OACEb,EAAA,qBAAKC,UAAWC,IAAOmH,MACrBrH,EAAA,qBAAKC,UAAWC,IAAOoH,QAASC,YAAa3G,KAAKsG,iBAChDlH,EAAA,qBAAKC,UAAWC,IAAOsH,QACrBxH,EAAA,cAACwH,EAAD,CAAQjG,KAAMX,KAAKJ,MAAMe,QAE3BvB,EAAA,qBAAKC,UAAWC,IAAOsG,gBACrBxG,EAAA,cAACwG,EAAD,CAAgBjF,KAAMX,KAAKJ,MAAMe,QAEnCvB,EAAA,qBAAKC,UAAWC,IAAOuH,QACrBzH,EAAA,cAACyH,EAAD,CAAQlG,KAAMX,KAAKJ,MAAMe,QAE3BvB,EAAA,qBAAKC,UAAWC,IAAOwH,SACrB1H,EAAA,cAAC2H,EAAD,CAASpG,KAAMX,KAAKJ,MAAMe,QAE5BvB,EAAA,qBAAKC,UAAWC,IAAO0H,UACrB5H,EAAA,cAAC6H,EAAD,CAAUtG,KAAMX,KAAKJ,MAAMe,QAE7BvB,EAAA,qBAAKC,UAAWC,IAAO4H,aACrB9H,EAAA,cAAC+H,EAAD,CAAaxG,KAAMX,KAAKJ,MAAMe,QAEhCvB,EAAA,qBAAKC,UAAWC,IAAOoC,SACrBtC,EAAA,cAACgI,EAAD,CAASzG,KAAMX,KAAKJ,MAAMe,QAE5BvB,EAAA,qBAAKC,UAAWC,IAAO+H,QACrBjI,EAAA,cAACkI,EAAD,CAAQ3G,KAAMX,KAAKJ,MAAMe,cAlEblC,aA8EToE,kBAJf,SAAyBR,GACvB,MAAO,CAAEA,UAGIQ,CAAyBlD,qBC/FlC4H,EAAe,CACjB,CACIjH,GAAI,KCFNiH,EAAe,CACjB,CACIjJ,YAAY,ICCLkJ,cAAgB,CAC3B9F,QFE0B,SAACW,EAAsBoF,GACjD,YADiE,IAAtCpF,MAAQkF,GAC3BE,EAAOlJ,MACX,IbVoB,eaWhB,SAAAmJ,OACOrF,EADP,CAEI,CACI/B,GAAImH,EAAOnH,MAGvB,IbhBsB,eaiBlB,MAAO,CACH,CACIA,GAAI,KAGhB,QACI,OAAO+B,IEjBf+C,ODCyB,SAAC/C,EAAsBoF,GAChD,YADgE,IAAtCpF,MAAQkF,GAC1BE,EAAOlJ,MACX,IdPkB,acQd,SAAAmJ,OACOrF,EADP,CAEI,CACI/D,YAAY,KAGxB,IdboB,ecchB,SAAAoJ,OACOrF,EADP,CAEI,CACI/D,YAAY,KAGxB,QACI,OAAO+D,MEtBbsF,EAAa,CAACC,KAMLC,cAAYC,EAAa,GAAIC,IAAeC,WAAf,EAAmBL,sFCW1CM,4FACZhI,OAAP,WACE,OACEb,EAAA,cAACwF,EAAA,iBAAD,KACExF,EAAA,cAAC8I,EAAA,EAAD,CAAU3B,MAAOA,GACfnH,EAAA,cAAC+I,EAAA,OAAD,KACE/I,EAAA,sBACEF,KAAK,WACL0B,QAAQ,wCAEVxB,EAAA,sCACAA,EAAA,sBAAMgJ,IAAI,YAAYC,KAAK,6BAE7BjJ,EAAA,cAACkJ,EAAA,EAAD,KACElJ,EAAA,cAACmJ,EAAD,CAAW5H,KAAMX,KAAKJ,MAAMe,cAdDlC,aAsB1B+J,EAAS,+CC1CtB,IAAAC,EAAAC,EAAA,GAIeC,IAFe,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkBJ,EAAA,yBAAMI,yBCFtD,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAP,GAAkB,IAAfQ,EAAeR,EAAfQ,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIE5K,IAAMgL,cAAcC,IAApBC,OAAAC,OAAA,CACLR,WACAC,iBACGA,EAAcQ,OANV,MAUXV,EAAiBW,UAAY,CAC3BV,SAAUzK,IAAUoL,MAAM,CACxBP,SAAU7K,IAAUE,OAAOC,aAC1BA,YAGUqK","file":"component---src-pages-index-tsx-bfd0433523814d7c99a4.js","sourcesContent":["import { BACKGROUND, DEBACKGROUND } from \"../types\";\n\nexport const background = () => ({\n  type: BACKGROUND\n});\nexport const debackground = () => ({\n  type: DEBACKGROUND\n});\n","export const SELECT_IMAGE = 'SELECT_IMAGE'\nexport const DESELECT_IMAGE = 'SELECT_IMAGE'\n\nexport const BACKGROUND = 'BACKGROUND'\nexport const DEBACKGROUND = 'DEBACKGROUND'\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styles from \"../styles/_global.module.scss\";\n\ninterface ComponentProps {\n  data: {};\n}\n\nconst menuItem = (link: string, name: string, selected: any) => {\n  return (\n    <div className={styles.item}>\n      <Link\n        to={link}\n        className={link === selected ? \" \" + styles.selected : \"\"}\n      >\n        {name}\n      </Link>\n    </div>\n  );\n};\n\nexport default class Component extends React.Component<ComponentProps, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  selected = \"/\";\n\n  public render() {\n    return (\n      <div className={styles.menu}>\n        {menuItem(\"/\", \"About\", this.selected)}\n        {menuItem(\"/rework/\", \"Rework\", this.selected)}\n        {menuItem(\"/instagram/\", \"Instagram\", this.selected)}\n        {menuItem(\"/contact/\", \"Contact\", this.selected)}\n      </div>\n    );\n  }\n}\n","import { DESELECT_IMAGE, SELECT_IMAGE } from \"../types\";\nimport console from \"console\";\n\nexport const deselectImage = () => ({\n  type: SELECT_IMAGE\n});\n\nexport const selectImage = (newId: string) => ({\n  type: DESELECT_IMAGE,\n  id: newId\n});\n","import Img from \"gatsby-image\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as galleryActions from \"../actions/galleryActions\";\nimport styles from \"../styles/_global.module.scss\";\nimport { applyMiddleware } from \"redux\";\n\ninterface ComponentProps {\n  data: {\n    gallery: any;\n    content: any;\n  };\n  dispatch: any;\n  state: any;\n}\n\nclass Component extends React.Component<ComponentProps, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  handleClick = () => {\n    this.props.dispatch(galleryActions.deselectImage());\n  };\n\n  renderMarkdown = (name: string) => {\n    let data = this.props.data.content.edges;\n\n    return data\n      .map((md: any) => {\n        if (\n          md.node.frontmatter.image &&\n          md.node.frontmatter.image.includes(name)\n        ) {\n          return (\n            <div>\n              <p>\n                <b>{md.node.frontmatter.title}</b>\n              </p>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: md.node.html\n                }}\n              />\n            </div>\n          );\n        }\n      })\n      .filter(function(a: any) {\n        return a;\n      })[0];\n  };\n\n  renderFullScreen = (id: string) => {\n    return (\n      <div>\n        {(() => {\n          return this.props.data.gallery.edges\n            .map((image: any) => {\n              if (image.node.id === id) {\n                return (\n                  <div className={styles.fullScreen}>\n                    <div\n                      key={image.node.id}\n                      className={styles.fullScreenGrid}\n                      onClick={this.handleClick}\n                    >\n                      <div className={styles.fullScreenImage}>\n                        <Img\n                          fluid={image.node.childImageSharp.fluid}\n                          key={image.node.id}\n                        />\n                      </div>\n                      <div className={styles.fullScreenText}>\n                        {this.renderMarkdown(image.node.name)}\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n            })\n            .filter(function(a: any) {\n              return a;\n            })[0];\n        })()}\n      </div>\n    );\n  };\n\n  getId = () => {\n    if (this.props.state.gallery && this.props.state.gallery.length > 0) {\n      return this.props.state.gallery[this.props.state.gallery.length - 1].id;\n    } else {\n      return \"\";\n    }\n  };\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {};\n\n  public render() {\n    return <div>{this.renderFullScreen(this.getId())}</div>;\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return { state };\n}\n\nexport default connect(mapStateToProps)(Component);\n","import Img from \"gatsby-image\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as galleryActions from \"../actions/galleryActions\";\nimport styles from \"../styles/_global.module.scss\";\nimport FullScreenImage from \"./fullscreenImage\";\n\ninterface ComponentProps {\n  data: {\n    gallery: any;\n    content: any;\n  };\n  dispatch: any;\n}\n\nconst handleClick = (props: any, key: any) => {\n  props.dispatch(galleryActions.selectImage(key));\n};\n\nconst renderImages = (props: any, gallery: any) => {\n  var data = gallery.edges;\n\n  data = data.sort(function() {\n    if (Math.random() == Math.random()) return 0;\n    if (Math.random() < Math.random()) return -1;\n    if (Math.random() > Math.random()) return 1;\n  });\n\n  var imageList: any = [];\n\n  data.map((imageNode: any) => {\n    if (imageList.length < 15) {\n      imageList.push(\n        <div\n          key={imageList.length}\n          onClick={e => handleClick(props, imageNode.node.id, e)}\n        >\n          <Img\n            className={styles.spiralContainer}\n            fluid={imageNode.node.childImageSharp.fluid}\n            key={\"s\" + imageNode.node.id}\n          />\n        </div>\n      );\n    }\n  });\n\n  return imageList;\n};\n\nclass Component extends React.Component<ComponentProps, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  public render() {\n    const { gallery } = this.props.data;\n\n    return (\n      <div className={styles.spiralGrid}>\n        <FullScreenImage data={this.props.data} />\n\n        <div className={styles.spiralOffset}>\n          {renderImages(this.props, gallery)}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Component);\n","import BackgroundImage from \"gatsby-background-image\";\nimport Img from \"gatsby-image\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as galleryActions from \"../actions/galleryActions\";\nimport styles from \"../styles/_global.module.scss\";\nimport * as types from \"../types\";\nimport FullScreenImage from \"./fullscreenImage\";\n\ninterface ComponentProps {\n  data: {\n    gallery: any;\n    content: any;\n  };\n  dispatch: any;\n}\n\ninterface ComponentState {}\n\nclass Component extends React.Component<ComponentProps, ComponentState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  selectedImageKey = \"\";\n\n  handleClick = (id: string) => {\n    this.props.dispatch(galleryActions.selectImage(id));\n  };\n\n  renderImages = () => {\n    let data = this.props.data.gallery.edges;\n\n    data = data.sort(function(a: any, b: any) {\n      if (a.node.name == b.node.name) {\n        return 0;\n      }\n      if (a.node.name < b.node.name) {\n        return -1;\n      }\n      if (a.node.name > b.node.name) {\n        return 1;\n      }\n    });\n\n    return data.map((image: any) => {\n      this.selectedImageKey = image.node.id;\n\n      return (\n        <div\n          key={\"d\" + image.node.id}\n          onClick={e => this.handleClick(image.node.id)}\n          className={styles.collageButton}\n        >\n          <Img\n            fluid={image.node.childImageSharp.fluid}\n            className={styles.collageContainer}\n            key={\"i\" + image.node.id}\n          />\n        </div>\n      );\n    });\n  };\n\n  renderImage = (frontmatter: any) => {\n    return this.props.data.gallery.edges\n      .map((image: any) => {\n        if (image.node.relativePath.includes(frontmatter.image)) {\n          this.selectedImageKey = image.node.id;\n          return (\n            <div\n              key={\"d\" + image.node.id}\n              className={styles.collageButton}\n              onClick={e => this.handleClick(image.node.id)}\n            >\n              <Img\n                className={styles.collageContainer}\n                fluid={image.node.childImageSharp.fluid}\n                key={\"i\" + image.node.id}\n              />\n              <div className={styles.imageTitle} key={\"p\" + image.node.id}>\n                {frontmatter.title}\n              </div>\n            </div>\n          );\n        }\n      })\n      .filter(function(a: any) {\n        return a;\n      })[0];\n  };\n\n  renderMarkdown = () => {\n    let data = this.props.data.content.edges;\n\n    data = data.sort(function(a: any, b: any) {\n      if (a.node.name == b.node.name) {\n        return 0;\n      }\n      if (a.node.name < b.node.name) {\n        return -1;\n      }\n      if (a.node.name > b.node.name) {\n        return 1;\n      }\n    });\n\n    return data.map((md: any) => {\n      return this.renderImage(md.node.frontmatter);\n    });\n  };\n\n  public render() {\n    const { gallery, content } = this.props.data;\n\n    return (\n      <div>\n        <FullScreenImage data={this.props.data} />\n\n        <div className={styles.collageGrid}>{this.renderMarkdown()}</div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return state;\n}\n\nexport default connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"../styles/_global.module.scss\";\n\ninterface ComponentProps {\n  data: {};\n}\n\ninterface ComponentState {}\n\nclass Component extends React.Component<ComponentProps, ComponentState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <div className={styles.topContainer}>\n        <div className={styles.top}>\n          <div className={styles.title}>Ming Wu</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return { state };\n}\n\nexport default connect(mapStateToProps)(Component);\n","import BackgroundImage from \"gatsby-background-image\";\nimport Img from \"gatsby-image\";\nimport * as React from \"react\";\nimport { Parallax } from \"react-scroll-parallax\";\nimport styles from \"../styles/_global.module.scss\";\n\ninterface ComponentProps {\n  data: {\n    websiteImages: any;\n  };\n}\n\nexport default class Component extends React.Component<ComponentProps, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  getFluidImage = (websiteImages: any, imagePath: string) => {\n    return websiteImages.edges\n      .map((imageNode: any) => {\n        if (imageNode.node.relativePath === imagePath) {\n          return imageNode.node.childImageSharp.fluid;\n        }\n      })\n      .filter(function(e: any) {\n        return e;\n      })[0];\n  };\n\n  public render() {\n    const { websiteImages } = this.props.data;\n\n    return (\n      <div className={styles.portraitContainer}>\n        <BackgroundImage\n          Tag=\"section\"\n          fluid={this.getFluidImage(websiteImages, \"background.webp\")}\n          className={styles.portraitBackground}\n        >\n          <Parallax x={[0, -13]} y={[0, -25]}>\n            <Img\n              Tag=\"section\"\n              fluid={this.getFluidImage(websiteImages, \"background.webp\")}\n              className={styles.portraitBackWall}\n            />\n          </Parallax>\n\n          <Parallax x={[0, 10]} y={[-10, -50]}>\n            <Img\n              className={styles.portraitElementContainer}\n              fluid={this.getFluidImage(websiteImages, \"ming.webp\")}\n            />\n          </Parallax>\n        </BackgroundImage>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\n\ninterface ComponentProps {\n  data: {};\n}\n\nexport default class Component extends React.Component<ComponentProps, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n  public render() {\n    return (\n      <div>\n        <i>Collages by Ming</i>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"../styles/_global.module.scss\";\n\ninterface ComponentProps {\n  data: {};\n}\n\nclass Component extends React.Component<ComponentProps, {}> {\n  renderTextbackground = () => {\n    var listOfText = [];\n\n    var isback = false;\n    if (this.props.state.effect != null) {\n      isback = this.props.state.effect[this.props.state.effect.length - 1]\n        .background;\n    }\n    var list = [\n      \"Collages\",\n      \"Art\",\n      \"Photography\",\n      \"Ottawa\",\n      \"...\",\n      \"😉\",\n      \"🐱\",\n      \"🎨\",\n      \"🐶\",\n      \"📷\",\n      \"✒️\",\n      \"🖍️\",\n      \"~~~\",\n      \"---\"\n    ];\n\n    if (isback)\n      for (let i = 0; i < 750; i++) {\n        if (i % 5 === 0) {\n          listOfText.push(\n            <div key={listOfText.length} className={styles.frontText}>\n              {\n                this.props.state.effect[this.props.state.effect.length - 1]\n                  .background\n              }\n\n              <p\n                key={\"p\" + listOfText.length}\n                style={{\n                  transform: `translate(${Math.random() * 200 -\n                    100}px, ${Math.random() * 200 -\n                    100}px) scale(${Math.random() * 2 +\n                    1}) rotate(${Math.random() *\n                    360}deg) translate(${Math.random() * 200 -\n                    100}px, ${Math.random() * 200 -\n                    100}px) scale(${Math.random() *\n                    0.5}) rotate(${Math.random() * 360}deg)`\n                }}\n              >\n                {list[Math.floor(Math.random() * (1 + list.length - 1))]}\n              </p>\n            </div>\n          );\n        } else {\n          listOfText.push(\n            <div key={listOfText.length} className={styles.backText}>\n              {\n                this.props.state.effect[this.props.state.effect.length - 1]\n                  .background\n              }\n\n              <p\n                key={\"p\" + listOfText.length}\n                style={{\n                  transform: `translate(${Math.random() * 200 -\n                    100}px, ${Math.random() * 200 -\n                    100}px) scale(${Math.random() * 3.5 +\n                    1}) rotate(${Math.random() *\n                    360}deg) translate(${Math.random() * 200 -\n                    100}px, ${Math.random() * 200 -\n                    100}px) scale(${Math.random() * 0.5 +\n                    0.5}) rotate(${Math.random() * 360}deg)`\n                }}\n              >\n                {list[Math.floor(Math.random() * (1 + list.length - 1))]}\n              </p>\n            </div>\n          );\n        }\n      }\n\n    return listOfText;\n  };\n\n  public render() {\n    return (\n      <div className={styles.textbackground}>\n        <div className={styles.textbackgroundGrid}>\n          {this.renderTextbackground()}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return { state };\n}\n\nexport default connect(mapStateToProps)(Component);\n","import * as React from \"react\";\nimport styles from \"../styles/_global.module.scss\";\n\ninterface ComponentProps {\n  data: { about: any };\n}\n\nexport default class Component extends React.Component<ComponentProps, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n  public render() {\n    return (\n      <div className={styles.textContainer}>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: this.props.data.about.html\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import BackgroundImage from \"gatsby-background-image\";\nimport Img from \"gatsby-image\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as effectActions from \"../actions/effectActions\";\nimport styles from \"../styles/_global.module.scss\";\nimport Sidebar from \"../componets/sidebar\";\nimport Spiral from \"../componets/spiral\";\nimport Gallery from \"../componets/gallery\";\nimport Header from \"../componets/header\";\nimport Portrait from \"../componets/portrait\";\nimport Footer from \"../componets/footer\";\nimport TextBackground from \"../componets/textbackground\";\nimport Description from \"../componets/description\";\n\ninterface ComponentProps {\n  data: {};\n}\n\nclass Component extends React.Component<ComponentProps, {}> {\n  constructor(props: any) {\n    super(props);\n\n    this.timerId = null;\n\n    this.hidingTimer();\n  }\n\n  app = this;\n  timerId: any;\n\n  hidingTimer = () => {\n    this.timerId = setTimeout(() => {\n      this.props.dispatch(effectActions.background());\n    }, 50000);\n  };\n\n  componentDidMount = () => {\n    this.hidingTimer();\n  };\n\n  handleMouseMove = (store: any) => {\n    clearTimeout(this.timerId);\n\n    var isback = false;\n    if (store.effect != null) {\n      isback = this.props.state.effect[this.props.state.effect.length - 1]\n        .background;\n    }\n\n    if (\n      this.props.state.effect[this.props.state.effect.length - 1].background\n    ) {\n      this.props.dispatch(effectActions.debackground());\n    }\n\n    this.hidingTimer();\n  };\n\n  public render() {\n    return (\n      <div className={styles.page}>\n        <div className={styles.wrapper} onMouseMove={this.handleMouseMove}>\n          <div className={styles.header}>\n            <Header data={this.props.data} />\n          </div>\n          <div className={styles.textbackground}>\n            <TextBackground data={this.props.data} />\n          </div>\n          <div className={styles.spiral}>\n            <Spiral data={this.props.data} />\n          </div>\n          <div className={styles.sidebar}>\n            <Sidebar data={this.props.data} />\n          </div>\n          <div className={styles.portrait}>\n            <Portrait data={this.props.data} />\n          </div>\n          <div className={styles.description}>\n            <Description data={this.props.data} />\n          </div>\n          <div className={styles.gallery}>\n            <Gallery data={this.props.data} />\n          </div>\n          <div className={styles.footer}>\n            <Footer data={this.props.data} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return { state };\n}\n\nexport default connect(mapStateToProps)(Component);\n","import { SELECT_IMAGE, DESELECT_IMAGE } from '../types'\n\nconst initialState = [\n    {\n        id: '',\n    },\n]\n\nexport const GalleryReducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case SELECT_IMAGE:\n            return [\n                ...state,\n                {\n                    id: action.id,\n                },\n            ]\n        case DESELECT_IMAGE:\n            return [\n                {\n                    id: '',\n                },\n            ]\n        default:\n            return state\n    }\n}\n","import { BACKGROUND, DEBACKGROUND } from '../types'\n\nconst initialState = [\n    {\n        background: false,\n    },\n]\n\nexport const EffectReducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case BACKGROUND:\n            return [\n                ...state,\n                {\n                    background: true,\n                },\n            ]\n        case DEBACKGROUND:\n            return [\n                ...state,\n                {\n                    background: false,\n                },\n            ]\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\n\nimport { GalleryReducer } from './galleryReducer'\nimport { EffectReducer } from './effectReducer'\n\nexport default combineReducers({\n    gallery: GalleryReducer,\n    effect: EffectReducer,\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst middleware = [thunk]\n\nimport rootReducer from '../reducers'\n\nexport type AppState = ReturnType<typeof rootReducer>\n\nexport default createStore(rootReducer, {}, applyMiddleware(...middleware))\n","import { graphql } from \"gatsby\";\nimport * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Layout from \"../layouts\";\nimport { Provider } from \"react-redux\";\nimport { ParallaxProvider } from \"react-scroll-parallax\";\nimport FrontPage from \"../componets/frontpage\";\n\nimport store from \"../store\";\ninterface PageProps {\n  data: {\n    imageTitle: any;\n    content: any;\n    websiteImages: any;\n    location: any;\n    gallery: any;\n    about: any;\n  };\n}\n\nexport default class IndexPage extends React.Component<PageProps, {}> {\n  public render() {\n    return (\n      <ParallaxProvider>\n        <Provider store={store}>\n          <Helmet>\n            <meta\n              name=\"viewport\"\n              content=\"width=device-width, initial-scale=1\"\n            />\n            <title>Ming Wu</title>\n            <link rel=\"canonical\" href=\"https://jonathanmc.dev/\" />\n          </Helmet>\n          <Layout>\n            <FrontPage data={this.props.data} />\n          </Layout>\n        </Provider>\n      </ParallaxProvider>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query Index {\n    site {\n      siteMetadata {\n        siteName\n      }\n    }\n\n    about: markdownRemark(frontmatter: { page: { eq: \"about\" } }) {\n      html\n    }\n\n    content: allMarkdownRemark(\n      sort: { fields: [fileAbsolutePath], order: ASC }\n    ) {\n      edges {\n        node {\n          html\n          rawMarkdownBody\n          frontmatter {\n            title\n            image\n            tags\n          }\n        }\n      }\n    }\n\n    websiteImages: allFile(\n      filter: {\n        extension: { regex: \"/(jpg)|(jpeg)|(png)|(webp)/\" }\n        sourceInstanceName: { eq: \"images\" }\n      }\n    ) {\n      edges {\n        node {\n          id\n          name\n          relativePath\n\n          childImageSharp {\n            fluid {\n              src\n              aspectRatio\n              srcSet\n              sizes\n            }\n          }\n        }\n      }\n    }\n\n    gallery: allFile(\n      filter: {\n        extension: { regex: \"/(jpg)|(jpeg)|(png)|(webp)/\" }\n        sourceInstanceName: { eq: \"gallery\" }\n      }\n    ) {\n      edges {\n        node {\n          id\n          name\n          relativePath\n          childImageSharp {\n            fluid {\n              src\n              aspectRatio\n              srcSet\n              sizes\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import * as React from 'react'\n\nconst MainLayout: React.SFC = ({ children }) => <div>{children}</div>\n\nexport default MainLayout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}